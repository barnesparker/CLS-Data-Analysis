"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis"),
other.author = c(NA, "Ripley", NA, NA, NA, NA))
View(authors)
View(books)
merge(authors, books, by.x="surname", by.y="name")
authors
books
merge(authors, books, by.x="surname", by.y="name")
merge(books, authors, by.x="name", by.y="surname")
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F) %>%
select(1:5)
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F) %>%
dplyr::select(1:5)
for (f in seq_along(norm_files)) {
norm_files[f] <- norm_files[f] %>% select(1:5)
}
norm_files[f] <- norm_files[f] %>% dplyr::select()
for (f in seq_along(norm_files)) {
norm_files[f] <- norm_files[f] %>% dplyr::select()
}
norm_files[1]
typeof(norm_files[1])
for (f in seq_along(norm_files)) {
norm_files[f] <- as.data.frame(norm_files[f]) %>% dplyr::select()
}
for (f in seq_along(norm_files)) {
norm_files[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1:5)
}
for (f in seq_along(norm_files)) {
norm_files[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1:5)
}
for (f in seq_along(norm_files)) {
norm_files[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
}
as.data.frame(norm_files[1])
as.data.frame(norm_files[2])
as.data.frame(norm_files[3])
View(norm_files)
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
View(norm_files)
for (f in seq_along(norm_files)) {
norm_files[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
}
View(norm_files)
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
for (f in seq_along(norm_files)) {
norm_files[f] <- as.data.frame(norm_files[f]) %>% select(c(1, 2, 5))
}
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
for (f in seq_along(norm_files)) {
norm_files[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(c(1, 2, 5))
}
View(norm_files)
for (f in seq_along(norm_files)) {
norm_files[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
}
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
for (f in seq_along(norm_files)) {
norm_files[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
}
View(norm_files)
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
norm_files[f]
as.data.frame(norm_files[f])
norm_files[1]
as.data.frame(norm_files[1])
clear
c
as.data.frame(norm_files[1]) %>% dplyr::select(1, 2, 5)
for (f in seq_along(norm_files)) {
norm_data[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
}
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
for (f in seq_along(norm_files)) {
norm_data[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
}
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
norm_data <- list()
for (f in seq_along(norm_files)) {
norm_data[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
}
View(norm_data)
norm_data[1]
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
norm_files[1]
colnames(norm_files[1])
colnames(as.data.frame(norm_files[1]))
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
norm_data <- data.frame()
for (f in seq_along(norm_files)) {
norm_data[1:3] <- as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
}
View(norm_data)
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
norm_data <- data.frame()
for (f in seq_along(norm_files)) {
norm_data[f] <- as.data.frame(norm_files[f]) %>% dplyr::select(1, 2, 5)
}
View(norm_data)
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
norm_data <- data.frame()
for (f in seq_along(norm_files)) {
norm_data[f] <- as.data.frame(norm_files[f])[c(1, 2, 5),]
}
View(norm_data)
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
norm_data <- data.frame()
for (f in seq_along(norm_files)) {
norm_data[1:3] <- as.data.frame(norm_files[f])[c(1, 2, 5),]
}
as.data.frame(norm_files[f])[c(1, 2, 5),]
norm_files[1])[c(1, 2, 5),]
norm_files[1][c(1, 2, 5),]
norm_files[1]
norm_files[1] %>%  head()
norm_files[1] %>% head(5)
head(norm_files[1])
View(norm_files)
irt_data <- bind_rows(irt_files) %>% arrange(Student_Name)
View(irt_data)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
View(data)
View(data)
data[-1:3]
data[-1:3,]
data[-(1:3),
head(norm_files[1])
quit
data[-(1:3),]
head(data[-(1:3),])
colnames(data[-(1:3),])
colnames(data)
colnames(data[-1,])
colnames(data[1,])
typeof(data)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
as.data.frame()
head(data)
typeof(data)
as.data.frame(data)
typeof(as.data.frame(data))
data[1,]
data[,1]
data[,-(1:3)]
authors
authors[-1,]
authors
authors[,-1]
authors[-1]
data[-1:3]
data[-(1:3)]
aggregate(data[-(1:3)], data[1], min, na.rm = T)
install.packages("rwinsteps")
install.packages("Rwinsteps")
knitr::opts_knit$set(root.dir = "C:\\Users\\pbarnes6\\Box\\Work (Project Assistant)\\data analysis\\test")
library(tidyr)
library(dplyr)
library(stringr)
library(xlsx)
get_data <- function(lang, skill, remove_dups = T) {
norm_files <- list.files("normal", pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(read.csv, simplify = F)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
# untmd <- aggregate(untmd[-1], untmd[1], mean, na.rm = T)[-1]
# tmd <- aggregate(tmd[-1], tmd[1], mean, na.rm = T)[-1]
}
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
View(data)
duplicated(data)
duplicated(data[c(1, 2)])
data %>% filter(duplicated(data))
data
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(duplicated(data[c(1, 2)]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(duplicated(data[1]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(duplicated(data[1,]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(duplicated(data[,1]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(duplicated(data[c(1)]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(duplicated(data[c(1, 2)]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(duplicated(data[c(1, 2)]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(duplicated(data[c(1)]))
}
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(duplicated(data[c(1)]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(!duplicated(data[c(1)]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(!duplicated(data[c(1, 2)]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(!duplicated(data[c(1, 2)]))
!duplicated(data[c(1, 2)]
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(!duplicated(data[1]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
fdata <- filter(data[duplicated(data[1])])
fdata <- filter(!duplicated(.[1])])
fdata <- filter(!duplicated(.[1]))
fdata <- filter(!duplicated(data[1]))
fdata <- data %>% filter(!duplicated(data[1]))
View(fdata)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name) %>%
filter(!duplicated(.[1]))
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
rdata <- data[!data[duplicated(data[1])]]
rdata <- data[data[duplicated(data[1])]]
rdata <- data[data[duplicated(data[1]),]]
rdata <- data %>% filter(data[!duplicated(data[1])])
rdata <- data %>% filter(data[!duplicated(data[1]),])
udata <- data %>% distinct()
View(udata)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
udata <- data %>% distinct()
View(udata)
unique(data)
anyDuplicated(data)
duplicated(data)
dups <- data[duplicated(data)]
dups <- data[duplicated(data),]
View(dups)
dups <- distinct(data)
View(dups)
data %>% filter(!(data %in% dups))
dups %>% filter(!(data %in% dups))
ddata <- data[-dups]
dups <- which(!distinct(data))
dups <- which(distinct(data))
dups <- which(duplicated(data[1]))
dups
dups <- which(!duplicated(data[1]))
dups
dups <- duplicated(data[1])
dups
dups <- data[duplicated(data[1])]$Student_name
dups <- data[duplicated(data[1])]$Student_Name
dups <- data[duplicated(data[1])]
dups <- data[duplicated(data[1]),]
dups <- data[duplicated(data[1]),]$Student_Name
dups
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F, stringsasfactors = F) %>%
bind_rows() %>%
arrange(Student_Name)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv(stringsAsFactors = F), simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv(., stringsAsFactors = F), simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
pmap(~read.csv(., stringsAsFactors = F), simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
library(tidyverse)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
pmap(~read.csv(., stringsAsFactors = F), simplify = F) %>%
bind_rows()
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
pmap(~read.csv(stringsAsFactors = F), simplify = F) %>%
bind_rows() %>%
arrange(Student_Name)
knitr::opts_knit$set(root.dir = "C:\\Users\\pbarnes6\\Box\\Work (Project Assistant)\\data analysis\\test")
library(tidyr)
library(dplyr)
library(stringr)
library(xlsx)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F, stringsasfactors = F) %>%
bind_rows() %>%
arrange(Student_Name)
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F, stringsasFactors = F) %>%
bind_rows()
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F, stringsAsFactors = F) %>%
bind_rows() %>%
arrange(Student_Name)
dups <- data[duplicated(data[1]),]$Student_Name
dups
dups <- duplicated(data[1])$Student_Name
dups <- data[duplicated(data[1]),]$Student_Name
rdata <- data[-which(dups)]
rdata <- data[-which(data$Student_Name == dups)]
rdata
View(rdata)
dups <- data[duplicated(data[1]),]$Student_Name
rdata <- data[-which(data$Student_Name == dups),]
-which(data$Student_Name == dups)
which(data$Student_Name == dups)
which(data$Student_Name %in% dups)
data[!which(data$Student_Name == dups)]
rdata <- data[!which(data$Student_Name == dups)]
rdata
dups <- data[duplicated(data[1])]
dups <- data[duplicated(data[1]),]
dups <- data[duplicated(data[1]),]
udata <- filter(!which(data$Student_Name %in% dups))}
udata <- filter(!which(data$Student_Name %in% dups))
udata <- filter(data[!which(data$Student_Name %in% dups)])
udata <- filter(data, !which(data$Student_Name %in% dups)])
udata <- data[!which(data$Student_Name %in% dups)]
data <- list.files(pattern = paste0(lang, ".", skill), ignore.case = T, full.names = T) %>%
sapply(function (n) {file.rename(n, paste0(n, ".csv"))}) %>%
names() %>%
str_c(".csv") %>%
sapply(read.csv, simplify = F, stringsAsFactors = F) %>%
bind_rows() %>%
arrange(Student_Name)
if(remove_dups == "some")
udata <- distinct(data, data[1])
get_data(lang, skill, "some")
print("Hello")
print("HI")
if(T)
print("Hello")
if(T)
print("Hello")
print("HI")
if(F)
print("Hello")
print("HI")
library(Rwinsteps)
imeasure <- rnorm(5)
ifile(imeasure, name = paste("item", 1:5, sep = ""))
plot(ifile(-2:2))
